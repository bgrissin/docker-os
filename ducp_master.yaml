
# This is a HOT template to join two ducp swarm nodes to an existing DUCP swarm master
# (see the ducp_master.yaml HOT template for master DUCP deploy)
#
#
heat_template_version: 2013-05-23

description: >
  Heat Docker template to deploy 2 swarm nodes to DUCP within in an Openstack environment.
#
#

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for compute instance
    default: rhel7.1-server_x86_64
  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used
    default: m1.small
  key:
    type: string
    label: Key name
    description: Name of key-pair to be used for compute instance
    default: cloud-key
  private_network:
    type: string
    label: Private network name or ID
    description: Network to attach instance to.
    default: docker-demos-net
  ucpadmuser:
    type: string
    label: url of DUCP master
    description: default is admino.
    default: admin
  ucpadmpasswd:
    type: string
    label: DUCP admin password
    description:
    default: orca
  regname:
    type: string
    label: HUB user name
    description: hub.docker.com account
    default:
  regpasswd:
    type: string
    label: HUB password
    description: hub.docker.com password
    default:
  regemail:
    type: string
    label: HUB email acccount
    description: hub.docker.com email
    default:


resources:
  server1:
    type: OS::Nova::Server
    properties:
      name: DUCP_swarm_master
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      networks:
        - network: { get_param: private_network }
      security_groups:
        - {get_resource: docker_sg}
      user_data:
        str_replace:
          template: |
            #!/bin/sh
            curl -sSL https://get.docker.com/ | sh
            systemctl start docker
            docker run --rm -e UCP_ADMIN_PASSWORD=$ucp_admin_passwd -e UCP_ADMIN_USER=$ucp_admin_user -e REGISTRY_USERNAME=$registry_name -e REGISTRY_PASSWORD=$registry_password -e REGISTRY_EMAIL=$registry_email -v /var/run/docker.sock:/var/run/docker.sock --name ucp dockerorca/ucp install --old-kernel
          params:
              $ucp_admin_passwd: {get_param: ucpadmpasswd}
              $ucp_admin_user: {get_param: ucpadmuser}
              $registry_name: {get_param: regname}
              $registry_password: {get_param: regpasswd}
              $registry_email: {get_param: regemail}
      user_data_format: RAW

  docker_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Ping, SSH, Docker
      rules:
      - protocol: icmp
      - protocol: tcp
        port_range_min: 22
        port_range_max: 22
      - protocol: tcp
        port_range_min: 80
        port_range_max: 80
      - protocol: tcp
        port_range_min: 443
        port_range_max: 443
      - protocol: tcp
        port_range_min: 2376
        port_range_max: 2376
      - protocol: tcp
        port_range_min: 12376
        port_range_max: 12376
      - protocol: tcp
        port_range_min: 12379
        port_range_max: 12379
      - protocol: tcp
        port_range_min: 12380
        port_range_max: 12380
      - protocol: tcp
        port_range_min: 12381
        port_range_max: 12381
      - protocol: tcp
        port_range_min: 12382
        port_range_max: 12382

  floating_ip:
    type: OS::Nova::FloatingIP
    properties:
      pool: ext-net

  association:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: floating_ip }
      server_id: { get_resource: server1 }

outputs:
  instance_name:
    description: Name of the instance
    value: { get_attr: [server1, name] }
  instance_ip:
    description: IP address of the instance
    value: { get_attr: [server1, first_address] }
